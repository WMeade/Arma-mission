params ["_type","_target","_minRadius","_maxRadius","_groupCount","_groupName","_groupSide","_groupFaction","_groupType","_menType","_airType","_groundType","_unitCount"];
private ["_type","_target","_minRadius","_maxRadius","_groupCount","_groupName","_groupSide","_groupFaction","_groupType","_menType","_airType","_groundType","_unitCount","_a","_b","_air","_men","_ground"];
/*
Created by Rad on the 18th of March, 2019. Arma 3 version 1.90 
This function is a highly customizable script for creating an enemy force that will move into an area and/or attack a target
Params:
1. Type:
	Value: String // Can be "ATTACK" or "MOVE". Determines the type of waypoint that the spawned units will get.
2. Target:
	Value: Array // Position coordinates [x,y,z].
		   Object // Object to be attacked
3. Min. Radius:
	Value: Number // Minimum spawn distance from target in meters
4. Max. Radius:
	Value: Number // Maximum spawn distance from target in meters
5. Group Count:
	Value: Number // Amount of groups spawned
6. Group Name:
	Value: String // Name used for group identification
7. Group Side:
	Value: String // Can be WEST,EAST or RESISTANCE, civilians aren't supported
8. Group Faction:
	Value: String // Classname of the faction from CfgFactionClasses
9. Group Type:
	Value: String // Can be "MEN", "GROUND" or "AIR". Determines if the group should be infantry, ground vehicle or aircraft.
10. Men Type:
	Value: String // Can be "STANDARD", "RECON" or "SPECIAL". Determines if the infantry group should be of certain kind, i.e. (CSAT, CSAT Recon, Viper).
11. Air Type:
	Value: String // Can be "AGPLANE", "AAPLANE","HELI" or "CASHELI". Determines if the aircraft should be of certain kind.
12. Ground Type:
	Value: String // Can be "CAR", "APC" or "TANK". Determines if the vehicle should be of certain kind.
13. Unit Count:
	Value: Number // Amount of units spawned per group
*/


_csatGi = ["O_Soldier_TL_F""O_engineer_F","O_soldier_exp_F","O_Soldier_A_F","O_Soldier_AR_F","O_medic_F","O_Soldier_GL_F","O_HeavyGunner_F","O_soldier_M_F","O_Soldier_F","O_Soldier_LAT_F","O_Soldier_HAT_F","O_Soldier_lite_F","O_Sharpshooter_F"];
_csatRecon = ["O_recon_TL_F","O_recon_F","O_recon_M_F","O_recon_medic_F","O_Pathfinder_F","O_recon_JTAC_F","O_recon_LAT_F"];
_csatSf = ["O_V_Soldier_TL_hex_F","O_V_Soldier_LAT_hex_F","O_V_Soldier_Medic_hex_F","O_V_Soldier_hex_F","O_V_Soldier_M_hex_F","O_V_Soldier_JTAC_hex_F","O_V_Soldier_Exp_hex_F"];
_aafGi = ["I_Soldier_TL_F","I_Soldier_A_F","I_Soldier_AR_F","I_medic_F","I_engineer_F","I_Soldier_exp_F","I_Soldier_GL_F","I_Soldier_M_F","I_Soldier_AA_F","I_Soldier_AT_F","I_Soldier_LAT_F","I_Soldier_LAT2_F","I_soldier_F"];
_syndikatGi = ["I_C_Soldier_Bandit_4_F","I_C_Soldier_Bandit_1_F","I_C_Soldier_Bandit_6_F","I_C_Soldier_Bandit_5_F","I_C_Soldier_Bandit_2_F","I_C_Soldier_Bandit_3_F","I_C_Soldier_Bandit_7_F","I_C_Soldier_Para_7_F","I_C_Soldier_Para_2_F","I_C_Soldier_Para_3_F","I_C_Soldier_Para_4_F","I_C_Soldier_Para_6_F","I_C_Soldier_Para_1_F","I_C_Soldier_Para_5_F"];
_csatCar = ["O_MRAP_02_gmg_F","O_MRAP_02_hmg_F","O_LSV_02_AT_F","O_LSV_02_armed_F"];
_csatApc = ["O_APC_Tracked_02_cannon_F","O_APC_Wheeled_02_rcws_v2_F"];
_csatTank = ["O_MBT_02_cannon_F","O_MBT_04_cannon_F","O_MBT_04_command_F"];
_aafCar = ["I_MRAP_03_gmg_F","I_MRAP_03_hmg_F"];
_aafApc = ["I_APC_Wheeled_03_cannon_F","I_APC_tracked_03_cannon_F","I_LT_01_AT_F","I_LT_01_cannon_F"];
_aafTank = ["I_MBT_03_cannon_F"];
_syndikatCar = ["I_C_Offroad_02_AT_F","I_C_Offroad_02_LMG_F"];

for "_a" from 1 to _groupCount do 
{
	_targetPos = switch (typeName _target) do 
	{
		case "OBJECT": {getPos _target};
		case "ARRAY": {_target};
	};
	_spawnPos = [[[_targetPos,_maxRadius]], ["water",[_targetPos, _minRadius]]] call BIS_fnc_randomPos;
	_groupId = [format ["%1_%2",_groupName,_a]];
	_group = grpNull;
	_group = createGroup [_groupSide, true];
	_group setGroupIdGlobal _groupId;
	_men = switch _groupSide do 
	{
		case east:
		{
			switch _groupFaction do
			{
				case "OPF_F":
				{
					switch _menType do
					{
						case "STANDARD": {_csatGi};
						case "RECON": {_csatRecon};
						case "SPECIAL": {_csatSf};
						default {_csatGi};
					};
				};
				default {"OPF_F"};
			};
		};
		case resistance:
		{
			switch _groupFaction do
			{
				case "IND_C_F": {_aafGi};
				case "IND_C_F": {_syndikatGi};
				default {"IND_F"};
			};
		};
		default {east};
	};
	_ground = switch _groupSide do 
	{
		case east:
		{
			switch _groupFaction do
			{
				case "OPF_F":
				{
					switch _groundType do
					{
						case "CAR": {_csatCar};
						case "APC": {_csatApc};
						case "TANK": {_csatTank};
						default {_csatCar};
					};
				};
				default {"OPF_F"};
			};
		};
		case resistance:
		{
			switch _groupFaction do
			{
				case "IND_F":
				{
					switch _groundType do
					{
						case "CAR": {_aafCar};
						case "APC": {_aafApc};
						case "TANK": {_aafTank};
						default {_aafCar};
					};
				};
				case "IND_C_F": {_syndikatCar};
				default {"IND_F"};
			};
		};
		default {east};
	};
	_air = switch _groupSide do 
	{
		case east:
		{
			switch _groupFaction do
			{
				case "OPF_F":
				{
					switch _airType do
					{
						case "AGPLANE": {["O_Plane_CAS_02_F","O_T_VTOL_02_infantry_hex_F"]};
						case "AAPLANE": {["O_Plane_Fighter_02_F"]};
						case "HELI": {["O_Heli_Transport_04_bench_F","O_Heli_Transport_04_covered_F","O_Heli_Light_02_unarmed_F"]};
						case "CASHELI": {["O_Heli_Attack_02_dynamicLoadout_F","O_Heli_Light_02_dynamicLoadout_F"]};
						default {["O_Heli_Attack_02_dynamicLoadout_F","O_Heli_Light_02_dynamicLoadout_F"]};
					};
				};
				default {"OPF_F"};
			};
		};
		case resistance:
		{
			switch _groupFaction do
			{
				case "IND_F":
				{
					switch _groundType do
					{
						case "AGPLANE": {["I_Plane_Fighter_03_CAS_F"]};
						case "AAPLANE": {["I_Plane_Fighter_03_AA_F","I_Plane_Fighter_04_F"]};
						case "HELI": {["I_Heli_Transport_02_F"]};
						case "CASHELI": {["I_Heli_light_03_F"]};
						default {["I_Heli_light_03_F"]};
					};
				};
				default {"IND_F"};
			};
		};
		default {EAST};
	}; systemChat typeName _air;
	for "_b" from 1 to _unitCount do 
	{
		switch _groupType do 
		{
			case "MEN": 
			{
				_unitType = if (_b == 1) then {_men select 0;} else {(selectRandom _men)};
				_unit = _group createUnit [_unitType,_spawnPos,[],2,"NONE"];
			};
		};
	};
};